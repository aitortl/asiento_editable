/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package asientos_grada.gui;

import asientos_grada.dto.Cliente;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author macbook
 */
public class VentanaListaReservas extends javax.swing.JDialog {

    private final VentanaPrincipal ventanaPrincipal;
    private TableRowSorter<TableModel> sorter;

    /**
     * Creates new form VentanaListaReservas
     *
     * @param parent
     * @param modal
     * @param reservas
     * @param ventanaPrincipal
     */
    public VentanaListaReservas(java.awt.Frame parent, boolean modal, ArrayList<Cliente> reservas, VentanaPrincipal ventanaPrincipal) {
        super(parent, modal);
        this.ventanaPrincipal = ventanaPrincipal;
        initComponents();
        configurarTablaReservas();
        crearTablaReservas(reservas);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLFiltro = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jCBNombre = new javax.swing.JCheckBox();
        jCBAsiento = new javax.swing.JCheckBox();
        jCBApellidos = new javax.swing.JCheckBox();
        jCBFecha = new javax.swing.JCheckBox();
        jCBHora = new javax.swing.JCheckBox();
        jTFGrada = new javax.swing.JTextField();
        jTFAsiento = new javax.swing.JTextField();
        jTFFecha = new javax.swing.JTextField();
        jTFHora = new javax.swing.JTextField();
        jTFApellidos = new javax.swing.JTextField();
        jTFNombre = new javax.swing.JTextField();
        jCBGrada = new javax.swing.JCheckBox();
        jBFiltro = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTListaReservas = new javax.swing.JTable();
        jLIntruccionBorrarReserva = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Lista Reservas");
        setModal(true);
        setResizable(false);

        jLFiltro.setForeground(new java.awt.Color(0, 51, 255));
        jLFiltro.setText("Filtro:");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jCBNombre.setText("Nombre:");

        jCBAsiento.setText("Asiento:");

        jCBApellidos.setText("Apellidos:");

        jCBFecha.setText("Fecha:");

        jCBHora.setText("Hora:");

        jCBGrada.setText("Grada:");

        jBFiltro.setText("Filtrar");
        jBFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBFiltroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCBNombre)
                            .addComponent(jCBGrada))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jTFNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCBApellidos)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTFApellidos))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jTFGrada, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCBAsiento)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTFAsiento, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCBFecha)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTFFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCBHora)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTFHora, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(301, 301, 301)
                        .addComponent(jBFiltro)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jCBAsiento)
                        .addComponent(jCBFecha)
                        .addComponent(jCBHora)
                        .addComponent(jTFGrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTFAsiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTFFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTFHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jCBGrada)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCBNombre)
                    .addComponent(jCBApellidos)
                    .addComponent(jTFApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTFNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jBFiltro)
                .addContainerGap())
        );

        jTListaReservas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Grada", "Asiento", "Nombre", "Apellidos", "Fecha", "Hora"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTListaReservas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTListaReservasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTListaReservas);

        jLIntruccionBorrarReserva.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLIntruccionBorrarReserva.setForeground(new java.awt.Color(255, 0, 0));
        jLIntruccionBorrarReserva.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLIntruccionBorrarReserva.setText("Doble click en una fila para borrar la reserva.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLFiltro)
                    .addComponent(jScrollPane1)
                    .addComponent(jLIntruccionBorrarReserva, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLFiltro)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLIntruccionBorrarReserva)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTListaReservasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTListaReservasMouseClicked
        if (evt.getClickCount() == 2) {
            int filaSeleccionada = jTListaReservas.getSelectedRow();
            if (filaSeleccionada >= 0) {
                int filaModelo = sorter.convertRowIndexToModel(filaSeleccionada);
                DefaultTableModel model = (DefaultTableModel) jTListaReservas.getModel();
                String grada = (String) model.getValueAt(filaModelo, 0);
                String asiento = (String) model.getValueAt(filaModelo, 1);
                int option = JOptionPane.showOptionDialog(this, "¿Deseas borrar la reserva del asiento " + grada + "-" + asiento + "?", "Confirmar Borrado", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, new Object[]{"Sí", "No"}, "Sí");
                if (option == javax.swing.JOptionPane.YES_OPTION) {
                    model.removeRow(filaModelo);
                    ventanaPrincipal.borrarReserva(grada, asiento);
                }
            }
        }
    }//GEN-LAST:event_jTListaReservasMouseClicked

    private void jBFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBFiltroActionPerformed
        String grada = jTFGrada.getText().trim();
        String asiento = jTFAsiento.getText().trim();
        String nombre = jTFNombre.getText().trim();
        String apellidos = jTFApellidos.getText().trim();
        String fecha = jTFFecha.getText().trim();
        String hora = jTFHora.getText().trim();
        
        // Crear un TableRowSorter para realizar el filtrado
        sorter = (TableRowSorter<TableModel>) jTListaReservas.getRowSorter();
        sorter.setRowFilter(createRowFilter(grada, asiento, nombre, apellidos, fecha, hora));
    }//GEN-LAST:event_jBFiltroActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBFiltro;
    private javax.swing.JCheckBox jCBApellidos;
    private javax.swing.JCheckBox jCBAsiento;
    private javax.swing.JCheckBox jCBFecha;
    private javax.swing.JCheckBox jCBGrada;
    private javax.swing.JCheckBox jCBHora;
    private javax.swing.JCheckBox jCBNombre;
    private javax.swing.JLabel jLFiltro;
    private javax.swing.JLabel jLIntruccionBorrarReserva;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTFApellidos;
    private javax.swing.JTextField jTFAsiento;
    private javax.swing.JTextField jTFFecha;
    private javax.swing.JTextField jTFGrada;
    private javax.swing.JTextField jTFHora;
    private javax.swing.JTextField jTFNombre;
    private javax.swing.JTable jTListaReservas;
    // End of variables declaration//GEN-END:variables

    private void crearTablaReservas(ArrayList<Cliente> reservas) {
        DefaultTableModel modelo = (DefaultTableModel) jTListaReservas.getModel();
        for (Cliente reserva : reservas) {
            Object[] rowData = {
                reserva.getGrada(),
                reserva.getAsiento(),
                reserva.getNombre(),
                reserva.getApellidos(),
                reserva.getFecha(),
                reserva.getHora()
            };
            modelo.addRow(rowData);
        }
    }

    private void configurarTablaReservas() {
        sorter = new TableRowSorter<>(jTListaReservas.getModel());
        jTListaReservas.setRowSorter(sorter);

    }

    private RowFilter<Object, Object> createRowFilter(String grada, String asiento, String nombre, String apellidos, String fecha, String hora) {
        // Construir el filtro en función de los valores proporcionados
        ArrayList<RowFilter<Object, Object>> filters = new ArrayList<>();

        if (jCBGrada.isSelected() && !grada.isEmpty()) {
            filters.add(RowFilter.regexFilter(grada, 0)); // Filtrar por la columna de Grada
        }

        if (jCBAsiento.isSelected() && !asiento.isEmpty()) {
            filters.add(RowFilter.regexFilter(asiento, 1)); // Filtrar por la columna de Asiento
        }

        if (jCBNombre.isSelected() && !nombre.isEmpty()) {
            filters.add(RowFilter.regexFilter(nombre, 2)); // Filtrar por la columna de Nombre
        }

        if (jCBApellidos.isSelected() && !apellidos.isEmpty()) {
            filters.add(RowFilter.regexFilter(apellidos, 3)); // Filtrar por la columna de Apellidos
        }

        if (jCBFecha.isSelected() && !fecha.isEmpty()) {
            filters.add(RowFilter.regexFilter(fecha, 4)); // Filtrar por la columna de Fecha
        }

        if (jCBHora.isSelected() && !hora.isEmpty()) {
            filters.add(RowFilter.regexFilter(hora, 5)); // Filtrar por la columna de Hora
        }
        return RowFilter.andFilter(filters);
    }
}
